Трябва да инициализираш следните:
GraphicsDeviceManager graphics;
SpriteBatch spriteBatch;


GraphicsDeviceManager се инициализира в конструктора на Game Engine-а + задаване на широчина, височина и други особености на прозореца:
graphics = new GraphicsDeviceManager(this);
graphics.IsFullScreen = false;
graphics.PreferredBackBufferHeight = 500;
graphics.PreferredBackBufferWidth = 700;
graphics.ApplyChanges(); //Changes the settings that you just applied


SpriteBatch се инициализира в LoadContent() метода.
spriteBatch = new SpriteBatch(GraphicsDevice);


Присвояване на стойностите на широчината и височината на прозореца за по-лесна употреба - става в LoadContent():
device = graphics.GraphicsDevice;
int screenWidth = device.PresentationParameters.BackBufferWidth;
int screenHeight = device.PresentationParameters.BackBufferHeight;


За рисуване на изображение се използват основни три типа променливи: Texture2D, Rectangle и Vector2.
private Texture2D elvinaLeft, elvinaRight, elvinaUp, elvinaDown, playerPic;
private Rectangle destinationRect;
private Rectangle sourceRect;
private Vector2 playerPosition = new Vector2();


Texture2D се инициализира в LoadContent():
playerAnim = Content.Load<Texture2D>("media/sprites/Elvina-down");


Ако има анимиране на движение, Rectangle се инициализира и обновява в Update(). Ако няма - направо в Draw().
destinationRect = new Rectangle(
(int)Абсолютна позиция по хоризонтала X от горен ляв ъгъл,
(int)Абсолютна позиция по вертикала Y от горен ляв ъгъл,
широчина на img, 
височина на img);

Ако има анимиране на движение картината се визуализира с нов правоъгълник, започващ от настоящото положение на героя:
playerPosition = new Vector2(
(float)graphics.PreferredBackBufferWidth / 2,
(float)graphics.PreferredBackBufferHeight / 2 - 50);

destinationRect = new Rectangle(
(int)playerPosition.X,
(int)playerPosition.Y,
32,
32);

spriteBatch.Draw за анимиране на движението в Draw();
spriteBatch.Draw(playerAnim, destinationRect, sourceRect, Color.White);

Полупрозрачност
The trick is in the parameters to the SpriteBatch.Begin method. In your case you want to set the BlendState. Sooner or later you'll probably want to use some of the other parameters too but for now you can get away with the 2 parameter overload. If you are pre-compiling your assets into XNB files you'll probably want either BlendState.AlphaBlend or BlendState.Additive like this:

_spriteBatch.Begin(SpriteSortMode.Deferred, BlendState.AlphaBlend);

Or if you are loading the png directly you'll probably want BlendState.NonPremultiplied. Play around with the values to see what effect suits you best.
